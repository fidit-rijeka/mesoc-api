openapi: 3.0.2
info:
  title: 'MESOC REST API'
  version: '1.1.0'
paths:
  /account/:
    get:
      operationId: Get account
      description: "Get user's account details. Requires the user to be authenticated."
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      security:
        - DRFToken: []
      tags:
        - account

    post:
      operationId: Create user
      description: 'Register user with the specified email address and password. On successful register, a verification
      email will be sent to the user from the email address configured in `settings.DEFAULT_FROM_EMAIL`.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormError'
          description: ''
      tags:
      - account
    patch:
      operationId: Partial user update
      description: 'Requires the user to be authenticated and verified.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormError'
          description: ''
      security:
        - DRFToken: []
      tags:
        - account
  /account/verification/:
    post:
      operationId: Resend verification email
      description:
        "Resend verification email to the user's email address. Requires the user to be authenticated."
      responses:
        '202':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
          description: 'User is already verified.'
      security:
        - DRFToken: []
      tags:
      - account
  /account/verification/confirmation/:
    post:
      operationId: Verification confirmation
      description: 'Verify user. Requires the user to be authenticated and associated with `uuid`.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Verification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormError'
          description: ''
      security:
        - DRFToken: []
      tags:
      - account
  /account/password_reset/:
    post:
      operationId: 'Send password reset email'
      description:
        "Send password reset email to the user's email address."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
      responses:
        '202':
          description: 'Email is sent to the user or there are no users with the specified email.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormError'
          description: 'Bad Request'
      tags:
      - account
  /account/password_reset/confirmation/:
    post:
      operationId: Password reset confirmation
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmation'
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormError'
          description: ''
      tags:
      - account
  /account/login/:
    post:
      operationId: Login
      description: 'Create or return authentication token associated with the user.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormError'
          description: ''
      tags:
      - account
  /aggregates/location/:
    get:
      operationId: Get location aggregate
      description: 'Get number of repository documents grouped by location.'
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - scientific
              - pilot
            example: 'scientific'
          required: false
          description: "Filter aggregate by document type."
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationAggregate'
          description: ''
      tags:
        - aggregates
  /aggregates/heatmap/:
    get:
      operationId: Get heatmap aggregate
      description: "Get average classification by cell. If exact GPS coordinates are not specified, the response won't
      contain `similar_documents` key."
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - scientific
              - pilot
            example: 'scientific'
          required: false
          description: "Filter aggregate by document type."
        - in: query
          name: latitude
          schema:
            type: number
            example: 52.520008
          required: false
          description: "Filter aggregate by latitude. If specified, then longitude must be specified as well."
        - in: query
          name: longitude
          schema:
            type: number
            example: 13.404954
          required: false
          description: "Filter aggregate by longitude. If specified, then latitude must be specified as well."
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HeatmapAggregate'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormError'
          description: ''
      tags:
        - aggregates
  /aggregates/impact/:
    get:
      operationId: Get impact aggregate
      description: "Get impact aggregate. If exact GPS coordinates are not specified, the response won't contain
      `similar_documents` key."
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - scientific
              - pilot
            example: 'scientific'
          required: false
          description: "Filter aggregate by document type."
        - in: query
          name: latitude
          schema:
            type: number
            example: 52.520008
          required: false
          description: "Filter aggregate by latitude. If specified, then longitude must be specified as well."
        - in: query
          name: longitude
          schema:
            type: number
            example: 13.404954
          required: false
          description: "Filter aggregate by longitude. If specified, then latitude must be specified as well."
        - in: query
          name: column
          schema:
            type: integer
            minimum: 0
            maximum: 2
            example: 0
          required: true
          description: "Filter aggregate by impact column."
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImpactAggregate'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormError'
            description: ''
      tags:
        - aggregates
  /aggregates/similar/cell/:
    get:
      operationId: Get cell similar documents of an aggregate
      description: 'Get cell similar documents of a heatmap aggregate.'
      parameters:
        - in: query
          name: latitude
          schema:
            type: number
            example: 52.520008
          required: true
          description: "Filter aggregate by latitude."
        - in: query
          name: longitude
          schema:
            type: number
            example: 13.404954
          required: true
          description: "Filter aggregate by longitude."
        - in: query
          name: cell
          schema:
            type: integer
            minimum: 0
            maximum: 29
            example: 9
          required: true
          description: "Filter aggregate by cell. This parameters corresponds to the index of a 10x3 matrix in column-major order with the top left element having index of 0."
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Similarity'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormError'
          description: ''
      tags:
        - aggregates
  /aggregates/similar/impact/:
    get:
      operationId: Get impact similar documents of an aggregate
      description: 'Get impact similar documents of an aggregate.'
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - scientific
              - pilot
            example: 'scientific'
          required: false
          description: "Filter aggregate by document type."
        - in: query
          name: latitude
          schema:
            type: number
            example: 52.520008
          required: true
          description: "Filter aggregate by latitude. If specified, then longitude must be specified as well."
        - in: query
          name: longitude
          schema:
            type: number
            example: 13.404954
          required: true
          description: "Filter aggregate by longitude. If specified, then latitude must be specified as well."
        - in: query
          name: impact
          schema:
            type: integer
            example: 2
          required: true
          description: "Filter aggregate by impact id."
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Similarity'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormError'
          description: ''
      tags:
        - aggregates
  /cell/{id}/:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      operationId: Get cell
      description: 'Get specific heatmap cell. Requires the user to be authenticated and verified.'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cell'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
          description: 'Document with the specified `id` does not belong to the authenticated user or does not exist.'
      security:
        - 'DRFToken': []
      tags:
        - cell
  /impact/{id}/:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      operationId: Get impact
      description: 'Get specific document impact. Requires the user to be authenticated and verified.'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Impact'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
          description: 'Document impact with the specified `id` does not belong to the authenticated user or does not exist.'
      security:
        - 'DRFToken': []
      tags:
        - impact
  /impacts/{id}/similar:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      operationId: Get impact similar documents
      description: 'Get impact similar documents of a specific document. Requires the user to be authenticated and verified.'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Similarity'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
          description: 'Cell with the specified `id` is not associated with the authenticated user or does not exist.'
      security:
        - DRFToken: []
      tags:
        - impact
  /feedback/:
    post:
      operationId: Create feedback
      description:
        'Send feedback to the email specified in `settings.CORE_FEEDBACK_EMAIL`. Requires the user to be authenticated and
        verified.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feedback'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
      security:
        - 'DRFToken': []
      tags:
      - feedback
  /documents/:
    get:
      operationId: Get documents
      parameters:
        - in: query
          name: state
          schema:
            type: string
            enum:
              - active
              - processing
              - processed
              - failed
              - dismissed
            example: 'processed'
          required: false
          description: 'Matches any document in a specified state. Value `active` can be used to retrieve all documents
          in state `processing`, `processed` or `failed`.'
      description: 'Get all documents uploaded by the user. Requires the user to be authenticated and verified.'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
          description: ''
      security:
        - 'DRFToken': []
      tags:
        - documents
    post:
      operationId: Create document
      description: 'Requires the user to be authenticated and verified.'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentUpload'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormError'
          description: ''
      security:
        - 'DRFToken': []
      tags:
        - documents
  /documents/{id}/:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: 'uuid'
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}'
    get:
      operationId: Get document
      description: 'Get document uploaded by the user. Requires the user to be authenticated and verified.'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
          description: 'Document with the specified `id` does not belong to the authenticated user or does not exist.'
      security:
        - 'DRFToken': []
      tags:
        - documents
    patch:
      operationId: Update document
      description: |
        Update document state with one the following values:
        * `processing` - document is still processing
        * `processed` - document is successfully processed
        * `failed` - an error occured while processing document
        * `dismissed` - same as `failed`, but acknowledged by user
        Requires the user to be authenticated and verified.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/State'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/State'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/State'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
          description: 'Document with the specified `id` does not belong to the authenticated user or does not exist.'
      security:
        - DRFToken: []
      tags:
        - documents
    delete:
      operationId: Delete document
      description: Delete unsuccessfully processed document. Requires the user to be authenticated and verified.
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormError'
          description: 'Document with the specified `id` has been successfully processed.'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
          description: 'Document with the specified `id` does not belong to the authenticated user or does not exist.'
      security:
        - DRFToken: []
      tags:
        - documents
  /documents/{id}/heatmap/:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: 'uuid'
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}'
    get:
      operationId: Get heatmap
      description: 'Get individual cells comprising document heatmap. Cell index corresponds to 3x10 matrix in
      column-major order. Will return empty array if document state is not `processed`.
      Requires the user to be authenticated and verified.'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cell'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
          description: 'Document with the specified `id` does not belong to the authenticated user or does not exist.'
      security:
        - DRFToken: []
      tags:
        - documents
  /documents/{id}/impacts/:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: 'uuid'
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}'
      - name: column
        in: query
        required: true
        schema:
          type: integer
          minimum: 0
          maximum: 2
    get:
      operationId: Get impacts
      description: 'Get document impacts. `column` parameter corresponds to index of a 1x3 matrix in
      column-major order. Will return empty array if document state is not `processed`.
      Requires the user to be authenticated and verified.'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Impact'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
          description: 'Document with the specified `id` does not belong to the authenticated user or does not exist.'
      security:
        - DRFToken: []
      tags:
        - documents
  /cell/{id}/similar:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      operationId: Get cell similar documents
      description: 'Get cell similar documents of a specific document. Requires the user to be authenticated and verified.'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Similarity'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
          description: 'Cell with the specified `id` is not associated with the authenticated user or does not exist.'
      security:
        - DRFToken: []
      tags:
        - cell
  /languages/:
    get:
      operationId: Get languages
      description: 'Requires the user to be authenticated and verified.'
      parameters:
        - in: query
          name: language
          schema:
            type: string
            example: 'croatian'
          required: false
          description: "Matches any language whose name starts with the specified value."
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Language'
          description: ''
      security:
        - DRFToken: []
      tags:
        - languages
  /languages/{id}/:
    get:
      operationId: Get language
      description: 'Requires the user to be authenticated and verified.'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
          description: 'Language with the specified `id` does not exist.'
      security:
        - DRFToken: []
      tags:
        - languages
  /locations/:
    get:
      operationId: Get locations
      description: 'Requires the user to be authenticated and verified.'
      parameters:
        - in: query
          name: address
          schema:
            type: string
            example: 'Rijeka, Croatia'
          required: true
          description: "Location address."
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
          description: ''
      security:
        - DRFToken: []
      tags:
        - locations
components:
  schemas:
    Cell:
      type: object
      properties:
        cell:
          type: integer
          minimum: 0
          maximum: 29
          example: 5
        classification:
          type: number
          example: 0.7
        similar_documents:
          type: string
          format: url
          example: 'https://api.mesoc.dev/cells/4/similar/'
        document:
          type: string
          format: url
          example: 'https://api.mesoc.dev/documents/bec0f39a-503d-413e-968f-a289f3420621/'
        url:
          type: string
          format: url
          example: 'http://api.mesoc.dev/cells/4/'
    Impact:
      type: object
      properties:
        impact:
          type: string
          example: "Better capacity to socialize"
        column:
          type: integer
          example: 0
          minimum: 0
          maximum: 2
        strength:
          type: number
          minimum: 0
          maximum: 1
          example: 0.47
        keywords:
          type: array
          example: ['sense increased', 'increased civic']
        similar_documents:
          type: string
          format: url
          example: 'https://api.mesoc.dev/impacts/4/similar/'
        document:
          type: string
          format: url
          example: 'https://api.mesoc.dev/documents/bec0f39a-503d-413e-968f-a289f3420621/'
        url:
          type: string
          format: url
          example: 'http://api.mesoc.dev/impacts/4/'
    Similarity:
      type: object
      properties:
        document_title:
          type: string
          description: "Document's title in the repository."
        similarity:
          type: number
          example: 0.45
          description: 'Jaccard similarity between documents.'
        preview_url:
          type: string
          format: url
          description: "Repository view of the document."
    Login:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          description: "User's email address."
          example: 'dev@mesoc.dev'
        password:
          type: string
          writeOnly: true
          minLength: 8
          maxLength: 128
          example: 'devtest123'
        token:
          type: string
          readOnly: true
          example: '1ba542f38c8353f4f584035cfd97f617e881b538'
        verified:
          type: boolean
          readOnly: true
          example: 'false'
      required:
      - username
      - password
    Feedback:
      type: object
      properties:
        subject:
          type: string
          minLength: 1
          maxLength: 50
          example: 'Message subject'
          description: 'Email subject.'
        message:
          type: string
          minLength: 120
          maxLength: 1200
          example: 'Email message body.'
          description: 'Email message.'
      required:
        - subject
        - message
    FormError:
      type: object
      properties:
        field:
          type: array
          items:
            type: string
          description: 'Errors related to the specified field.'
          example: ['This field is required.']
        non_field_errors:
          type: array
          items:
            type: string
          description: 'Errors not related to any specific field.'
          example: ['Unable to log in with provided credentials.']
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
          uniqueItems: true
        password:
          type: string
          writeOnly: true
          minLength: 8
          maxLength: 128
          description:
            "Password must contain both letters and numbers, must not be common, and it must be sufficiently different
            from the other user attributes, see Django's
            [included validators](https://docs.djangoproject.com/en/3.1/topics/auth/passwords/#included-validators) and
            `settings.AUTH_PASSWORD_VALIDATORS`."
          example: 'devtest123'
        verified:
          type: boolean
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
        documents:
          type: string
          format: url
          readOnly: true
        url:
          type: string
          format: url
          readOnly: true
      required:
      - email
      - password
      uniqueItems: true
    HttpError:
      type: object
      properties:
        detail:
          type: array
          items:
            type: string
          description: 'HTTP error message.'
          example: ['Not found.']
    PasswordResetConfirmation:
      type: object
      properties:
        uuid:
          type: string
          writeOnly: true
          format: uuid
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}'
          description: "UUID associated with the password reset request."
        password:
          type: string
          writeOnly: true
          minLength: 8
          maxLength: 128
          example: 'newexamplepassword123'
      required:
        - uuid
        - password
    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          writeOnly: true
          example: 'dev@mesoc.dev'
      required:
        - email
    Verification:
      type: object
      properties:
        uuid:
          type: string
          description: 'Verification UUID associated with the user.'
          format: uuid
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}'
          uniqueItems: true
        verified:
          type: boolean
          readOnly: true
          description: "Verification status."
        user:
          type: string
          format: url
          readOnly: true
    Language:
      type: object
      properties:
        code:
          type: string
          maxLength: 2
          minLength: 2
          example: 'hr'
        name:
          type: string
          maxLength: 20
          minLength: 2
          example: 'Croatian'
        url:
          type: string
          format: url
          example: 'http://api.mesoc.dev/languages/2/'
    Location:
      type: object
      properties:
        address:
          type: string
          minLength: 1
          maxLength: 142
          example: 'Rijeka, Croatia'
        city:
          type: string
          minLength: 1
          maxLength: 70
          example: 'Rijeka'
        longitude:
          type: number
          example: 14.4091700000000000
        latitude:
          type: number
          example: 45.3430600000000000
        country:
          type: string
          minLength: 1
          maxLength: 70
          example: 'Croatia'
    State:
      type: object
      properties:
        state:
          type: string
          enum:
            - processing
            - failed
            - processed
            - dismissed
          example: 'dismissed'
    Document:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
          example: 'Necronomicon'
          uniqueItems: true
        abstract:
          type: string
          maxLength: 1000
          example: 'This is an abstract of a scientific study or a pilot project.'
        type:
          type: string
          enum:
            - scientific
            - pilot
          example: 'scientific'
        uploaded_at:
          type: string
          format: datetime
          example: '2020-12-31T17:08:06.018899Z'
        state:
          type: string
          enum:
            - processing
            - failed
            - processed
            - dismissed
          example: 'processing'
        language:
          $ref: '#/components/schemas/Language'
        location:
          $ref: '#/components/schemas/Location'
        heatmap:
          type: string
          format: url
          example: 'http://api.mesoc.dev/documents/bec0f39a-503d-413e-968f-a289f3420621/heatmap/'
        impacts:
          type: string
          format: url
          example: 'http://api.mesoc.dev/documents/bec0f39a-503d-413e-968f-a289f3420621/impacts/'
        user:
          type: string
          format: url
          example: 'http://api.mesoc.dev/users/1/'
        url:
          type: string
          format: url
          example: 'http://api.mesoc.dev/documents/bec0f39a-503d-413e-968f-a289f3420621/'
    DocumentUpload:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
          example: 'My document'
          uniqueItems: true
        abstract:
          type: string
          maxLength: 1000
          example: 'This is an abstract of a scientific study or a pilot project.'
        type:
          type: string
          enum:
            - scientific
            - pilot
          example: 'scientific'
        language:
          type: string
          format: url
          description: 'Language uniform resource locator.'
          example: 'http://api.mesoc.dev/languages/2/'
        location:
          type: string
          description: 'Location address.'
          example: 'Rijeka, Croatia'
        file:
          type: string
          format: file
          description: 'Text or PDF file to upload.'
          example: '/home/mulder/proof.pdf'
    LocationAggregate:
      type: object
      properties:
        address:
          type: string
          minLength: 1
          maxLength: 142
          example: 'Rijeka, Croatia'
        city:
          type: string
          minLength: 1
          maxLength: 70
          example: 'Rijeka'
        longitude:
          type: number
          example: 14.4091700000000000
        latitude:
          type: number
          example: 45.3430600000000000
        country:
          type: string
          minLength: 1
          maxLength: 70
          example: 'Croatia'
        num_scientific:
          type: integer
          description: 'Number of scientific studies.'
          example: 12
        num_pilot:
          type: integer
          description: 'Number of pilot studies.'
          example: 12
        heatmap:
          type: string
          format: url
          example: 'http://api.mesoc.dev/aggregates/heatmap/?latitude=45.3430600000000000&longitude=14.4091700000000000'
    HeatmapAggregate:
      type: object
      properties:
        cell:
          type: integer
          example: 5
        classification:
          type: number
          example: 0.7
        similar_documents:
          type: string
          format: url
          example: 'http://api.mesoc.dev/aggregates/similar/cell/?latitude=45.3430600000000000&longitude=14.4091700000000000&cell=2'
    ImpactAggregate:
      type: object
      properties:
        impact:
          type: string
          example: "Better capacity to socialize"
        column:
          type: integer
          example: 0
          minimum: 0
          maximum: 2
        strength:
          type: number
          minimum: 0
          maximum: 1
          example: 0.47
        keywords:
          type: array
          example: ['sense increased', 'increased civic']
        similar_documents:
          type: string
          format: url
          example: 'http://api.mesoc.dev/aggregates/similar/impact/?latitude=45.3430600000000000&longitude=14.4091700000000000&impact=2'

  securitySchemes:
    DRFToken:
      type: http
      scheme: 'Bearer'
      description:
        'Default authentication scheme based on Djago Rest Framework authtoken implementation.
        See [DRF documentation](https://www.django-rest-framework.org/api-guide/authentication/#tokenauthentication) for
        additional details.'
